const { marked } = require('marked');

class ReportGenerator {
  /**
   * Generate HTML report from markdown summary
   * @param {String} markdownSummary - AI generated summary
   * @param {Array} alerts - Raw alerts data
   * @param {Date} reportDate - Date for the report
   * @returns {String} HTML report
   */
  generateHTMLReport(markdownSummary, alerts, reportDate = new Date()) {
    const htmlContent = marked(markdownSummary);
    const stats = this.generateStats(alerts);
    
    return `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Daily Alert Summary - ${this.formatDate(reportDate)}</title>
    <style>
        ${this.getStyles()}
    </style>
</head>
<body>
    <div class="container">
        <header class="header">
            <h1>üö® Daily Alert Summary</h1>
            <div class="date">${this.formatDate(reportDate)}</div>
            <div class="stats">
                <span class="stat-item">üìß ${stats.total} Total Alerts</span>
                <span class="stat-item">üè∑Ô∏è ${stats.sources} Sources</span>
                <span class="stat-item">‚ö†Ô∏è ${stats.critical} Critical</span>
            </div>
        </header>
        
        <main class="content">
            ${htmlContent}
        </main>
        
        <footer class="footer">
            <p>Generated by Mailpit Alert Summarizer at ${new Date().toLocaleString()}</p>
            <p>This report was automatically generated using AI analysis of your monitoring alerts.</p>
        </footer>
    </div>
</body>
</html>
`;
  }

  /**
   * Generate statistics from alerts
   */
  generateStats(alerts) {
    if (!alerts || alerts.length === 0) {
      return { total: 0, sources: 0, critical: 0 };
    }

    const sources = new Set(alerts.map(a => a.source));
    const critical = alerts.filter(a => a.severity === 'P1').length;

    return {
      total: alerts.length,
      sources: sources.size,
      critical
    };
  }

  /**
   * Format date for display
   */
  formatDate(date) {
    return date.toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  }

  /**
   * CSS styles for the report
   */
  getStyles() {
    return `
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            color: #333;
            background: #f5f7fa;
        }
        
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            min-height: 100vh;
        }
        
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 2rem;
            text-align: center;
        }
        
        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 0.5rem;
            font-weight: 700;
        }
        
        .date {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 1rem;
        }
        
        .stats {
            display: flex;
            justify-content: center;
            gap: 2rem;
            flex-wrap: wrap;
        }
        
        .stat-item {
            background: rgba(255,255,255,0.2);
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.9rem;
            font-weight: 500;
        }
        
        .content {
            padding: 2rem;
        }
        
        .content h1, .content h2, .content h3 {
            color: #2d3748;
            margin: 1.5rem 0 1rem 0;
        }
        
        .content h1 {
            border-bottom: 3px solid #667eea;
            padding-bottom: 0.5rem;
        }
        
        .content h2 {
            border-left: 4px solid #667eea;
            padding-left: 1rem;
            background: #f7fafc;
            padding: 0.75rem 1rem;
            border-radius: 0 8px 8px 0;
        }
        
        .content table {
            width: 100%;
            border-collapse: collapse;
            margin: 1rem 0;
            box-shadow: 0 1px 3px rgba(0,0,0,0.1);
            border-radius: 8px;
            overflow: hidden;
        }
        
        .content th {
            background: #667eea;
            color: white;
            padding: 1rem;
            text-align: left;
            font-weight: 600;
        }
        
        .content td {
            padding: 0.75rem 1rem;
            border-bottom: 1px solid #e2e8f0;
        }
        
        .content tr:nth-child(even) {
            background: #f8f9ff;
        }
        
        .content ul, .content ol {
            margin: 1rem 0 1rem 2rem;
        }
        
        .content li {
            margin: 0.5rem 0;
        }
        
        .content strong {
            color: #2d3748;
        }
        
        .content code {
            background: #edf2f7;
            padding: 0.2rem 0.4rem;
            border-radius: 4px;
            font-size: 0.9em;
        }
        
        .content blockquote {
            border-left: 4px solid #ffd700;
            background: #fffbeb;
            padding: 1rem;
            margin: 1rem 0;
            border-radius: 0 8px 8px 0;
        }
        
        .footer {
            background: #2d3748;
            color: #a0aec0;
            padding: 2rem;
            text-align: center;
            font-size: 0.9rem;
        }
        
        .footer p {
            margin: 0.5rem 0;
        }
        
        @media (max-width: 600px) {
            .stats {
                flex-direction: column;
                align-items: center;
                gap: 1rem;
            }
            
            .content {
                padding: 1rem;
            }
            
            .header {
                padding: 1.5rem 1rem;
            }
            
            .header h1 {
                font-size: 2rem;
            }
        }
    `;
  }
}

module.exports = new ReportGenerator();
